<!-- FUNCTIONS EDIT MODAL -
 STEMMING FROM EXPENSE TABLE TR ROWS -
 WHEN USER CLICKS A ROW IN THE TABLE OF EXPENSES,
 THE LITTLE MODAL WHICH POPS UP.
 -->
<script>
  
  // When clicking on the icons on the expense table 
  function toggle_edit_delete_expense(id,tr_expense_id)
  {
    if( !($(tr_expense_id).data("I_am_Selected_Tag")))
    {
      display_Expense_Table_Modal(id,tr_expense_id);
    }
  }

  function display_Expense_Table_Modal(id,tr_expense_id){
    //create JQuery object for table row selected
    const $Table_Selected_Row = $(tr_expense_id);
   
    // Colour the TD inside the TR
   colourTDinsideTR($Table_Selected_Row,"aqua");  
    
    //create JQuery Obj of modal to display Edit,Delete
    const $Expense_Table_Modal = $("#expense_table_modal");

    //create JQuery Obj of modal's parent
    const $whoIsYourDaddy = $Expense_Table_Modal.parent()[0];

    //Create JQuery Obj's of modal's 3 buttons
    const $Expense_Table_Modal_Edit_Button = $("#expense_table_modal a").first();
    const $Expense_Table_Modal_Delete_Button = $("#expense_table_modal a").eq(1);
    const $Expense_Table_Modal_Hide_Button = $("#expense_table_modal a").eq(2);

    //Check if modal has a parent of type TR, or is no undefined.  UNdefined coming after an element was deleted.
    if($whoIsYourDaddy.tagName === "TR"){
      
      //remove the class from the parent and apply it to the new TR class
      const $Daddy = $Expense_Table_Modal.parent();
      $Daddy.removeClass("row-highlight-selected");
      $Daddy.data("I_am_Selected_Tag",false);
      //colour the TD's of the old TR to original colour
      colourTDinsideTR($Daddy,"white");
    } 

    //For new TR, add class
    $Table_Selected_Row.addClass("row-highlight-selected");
   //For new TR, add data, a flag which prevents this function from running again should the user click on the same TR row
   $Table_Selected_Row.data("I_am_Selected_Tag",true);
  
      //Make modal appear
      $Expense_Table_Modal.css({
          display: "flex",
      });

    //Clear the old click handlers
    $Expense_Table_Modal_Edit_Button.off('click');
    $Expense_Table_Modal_Delete_Button.off('click');
    $Expense_Table_Modal_Hide_Button.off('click');

    //Assign the click events

    //EDIT
    $Expense_Table_Modal_Edit_Button.on("click",function(){
        //To Edit, ajax call to fetch expense, then load modal by way of ajax method success path.
        ajaxCallToExpenseController_GetExpense(id)
        @* //Hide this modal, its job is done
        hide_Expense_Table_Modal($Expense_Table_Modal,$Table_Selected_Row); *@
      });

    //DELETE
    $Expense_Table_Modal_Delete_Button.on("click",function(){
      toggle_delete_expense_modal($Table_Selected_Row,id);
    })

    //Hide
    $Expense_Table_Modal_Hide_Button.on("click",function(){
      hide_Expense_Table_Modal($Expense_Table_Modal,$Table_Selected_Row);
    })

    //Finally, append to DOM.
    $Table_Selected_Row.append($Expense_Table_Modal);
  }


function hide_Expense_Table_Modal($Expense_Table_Modal,$Table_Selected_Row){
  
  //hide the screen.  Then, remove the data associated with the JQuery Object
  $Expense_Table_Modal.hide(()=>{
        //Remove the Data saying this TR is selected 
      $Table_Selected_Row.data("I_am_Selected_Tag",false);
  })

  //Revert the Colour Scheme of the TD inside the TR
  colourTDinsideTR($Table_Selected_Row,"white");
  //Remove the class from the parent
  $Table_Selected_Row.removeClass("row-highlight-selected");
}

//Takes a JQuery (TR of a Table) object.  And changes the colours of each TD
function colourTDinsideTR($Table_Selected_Row, colour){
   let nodes = $Table_Selected_Row.children();
    for(let i = 0; i < nodes.length; i++){
      nodes[i].style.color = colour;
    }  
}
</script>
