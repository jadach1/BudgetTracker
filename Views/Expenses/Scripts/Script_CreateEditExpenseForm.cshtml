<!-- EVENT LISTENER -->
<script>
    document.getElementById("expense-form-append-list-button").addEventListener("click", () => {
        expenseFormAppendList();
    })

     document.getElementById("expense-form-display-list-button").addEventListener("click", () => {
        ExpenseListDisplay(false); // false = show list hide form
    })
</script>

<!-- FUNCTIONS FORM SUBMISSION-->
<script>
    // Create an empty list of expenses
    var listOfExpenses = [];
    var listOfExpensesCounter = 0;

    function expenseFormAppendList() {
        // get the expenseForm
        const form = document.getElementById("expenseForm");
        //extract the data
        const formData = Object.fromEntries(new FormData(form));

        //modify the category/type selected, 1.food = 1 food
        const category = formData.type.split(".");

        //create the object
        let expense = {
            id: "listOrder"+listOfExpensesCounter,
            month: formData.month,
            week: formData.week,
            type: category[0],
            amount: formData.amount === "" ? 0 : formData.amount,
            date: formData.date === "" ? getCurrentDate() : formData.date,
            description: formData.description
        }

        //push to list of expenses
        listOfExpenses.push(expense);
        
        //update the UI
        alterPosition();

        // update tue ul list
        updateExpenseList(expense, category[1]);
    }

    // Not used for UI, but for form-submission
    function getCurrentDate() {
        const d = new Date();
        const month = d.getMonth() + 1;
        const year = d.getFullYear();
        const day = d.getDate();
        return year + "-" + month + "-" + day;
    }
</script>

<!--STAGINGLIST AREA-->
<!--FUNCTIONS USER INTERFACE MANIPULATION-->
<script>
    var list = document.getElementById("createExpenseStagingArea");

    // Update the expense list UI
    function updateExpenseList(expense, category) {
        
         //prevent user from constantly deleting the same item.
        let preventMultipleDeletionFlags = false;

        //create list-item 
        const element = document.createElement("p");
        const id = expense.id;
        element.setAttribute("id", id);
        element.className = "ripple-effect"

        //this is what will be presented to the user
        const type = " " + category + "/";
        const amount = " " + currency_formatter.format(expense.amount);
        const date = humanReadableDate(expense.date) + "/";

        //adjust what will be presented based on size of user screen
        const size = +document.getElementsByTagName("body")[0].clientWidth;
        console.log("console size, inside script_createEditExpenseForm " + size, size > 505)
        if (size > 505)
            element.innerHTML = date + type + amount;
        else
            element.innerHTML = type + amount;

        element.style.fontSize = "large";

        //append the list item
        list.getElementsByTagName("ul")[0].appendChild(element);

        // create edit button
        const buttonEdit = document.createElement("a");
        buttonEdit.className = "btn";
        buttonEdit.classList.add("btn-outline-secondary", "btn-lg", "rounded-5", "mx-2");
        element.appendChild(buttonEdit);

        const iconEdit = document.createElement("span");
        iconEdit.className = "bi";
        iconEdit.classList.add("bi-eye-fill");
        buttonEdit.appendChild(iconEdit);

        //create delete button
        const buttonDelete = document.createElement("a");
        buttonDelete.className = "btn";
        buttonDelete.classList.add("btn-outline-secondary", "btn-lg", "rounded-5","ripple-effect");
        //delete protocol
        buttonDelete.addEventListener("click", () => {deleteListItem(id,preventMultipleDeletionFlags);})

        //append delete item
        element.appendChild(buttonDelete);

        const iconDelete = document.createElement("span");
        iconDelete.className = "bi";
        iconDelete.classList.add("bi-fire");
        buttonDelete.appendChild(iconDelete);

        //add jquery ripple effect, must be done after appending 
        $('.ripple-effect').rippleEffect();

        //update the counter
        counterUpdate(true);
    }

     //timeout function needs to be passed in seperately.  This was all done for a fancy ripple effect, ughh.
        function deleteListItem(listid,preventMultipleDeletionFlags)
        {
            disableEnableAllButtons(true);   
            //colours the list-items background in a pretty red
            document.getElementById(listid).style.backgroundColor="#e44c55";
            //fire's the list-items "click" event, ripple-effect
            $("#"+listid).trigger("click");

            //check to see if this is already marked to be deleted
            if(!preventMultipleDeletionFlags){
                //mark it to be deleted
                preventMultipleDeletionFlags = true;

                //after 1/2 second, delete the item
                setTimeout(function(){
                    findAndDeleteListItem(listid);
                    //update the counter
                    counterUpdate(false);
                    list.getElementsByTagName("ul")[0].removeChild(document.getElementById(listid));
                    disableEnableAllButtons(false);
                },500);
            } 
        }

    //Finds, deletes, and updates the array of List Items
    function findAndDeleteListItem(listid){
        const index = listOfExpenses.findIndex(e => listid===e.id)
        console.log(index);
        if(index != -1){
            listOfExpenses.splice(index,1);
            console.log(listOfExpenses)
        }
    }

    //Updates the UI counter count of list of items.
    function counterUpdate(incrimentCounterFlag){
        incrimentCounterFlag ? listOfExpensesCounter++ : listOfExpensesCounter--;  
        //append to counter
        const textListCounter = document.getElementById("expenseListCount");
        textListCounter.innerHTML = "Items in list: " + listOfExpensesCounter;
    }

    function ExpenseListDisplay(flag = true){
        const createExpenseStagingArea = document.getElementById("createExpenseStagingArea");
        const expenseForm = document.getElementById("expenseForm");
        if(listOfExpensesCounter > 0 || expenseForm.hidden){
            createExpenseStagingArea.hidden = flag;
            expenseForm.hidden = !flag;
            //enable all buttons
            disableEnableAllButtons(false);
        } 
    }
</script>