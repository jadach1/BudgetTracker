<script>
    function toggle_edit_expense_form(obj) {
        console.log(obj);
        let EditExpenseForm = document.getElementById("editExpenseForm");
        EditExpenseForm.hidden = false;
        EditExpenseForm.classList.add("d-flex");

        //Alter position of form
        alterPosition("EditExpense");

        //disable buttons
        disableEnableAllButtons(true);

        //load the expense Form
        load_Expense_Form(obj);
    }

</script>
@{
    /*BELOW, FOR LOADING THE EXPEBNSE FORM WITH EXISTING VALUES*/
}


<script>
    function load_Expense_Form(obj) {
        console.log(obj);
        edit_expense_form_load_week(obj.Week);
        edit_expense_form_load_month(obj.Month);
        edit_expense_form_load_category(obj.category)
    }

/*WEEK*/
    function edit_expense_form_load_week(Week) {
        const week_field = document.getElementById("editExpenseForm_week");
        week_field.value = Week;
    }

/*MONTH*/
    // An array of months
    const array_of_months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

    function edit_expense_form_load_month(month) {
        // Set the forms field value
        const elem_field = document.getElementById("editExpenseForm_month");
        elem_field.value = month;
        // Set the User Interface Display Text 
        const elem_field_user_display = document.getElementById("editExpenseForm_month_displayName");
        elem_field_user_display.innerHTML = array_of_months[month-1];
    }

    function edit_expense_form_change_month(increment) {
        // Get the edit form's field input value
         const elem_field = document.getElementById("editExpenseForm_month");
        //covnert to integer
        let newValue = +elem_field.value;
        //check if increasing or decreasing
        if (increment) {
            //if increasing, check if it is at December ie 11, else incriment
            if (newValue == 12)
                newValue = 1;
            else
                newValue++;
        } 
        //if decreasing, check if it is at january ie 0, else decrease
        else { 
            if (newValue == 1)
                newValue = 12;
            else
                newValue--;
        }
        // Set the new form field input value
        elem_field.value = newValue;
        // Set the form's User Display text month equivalent
        const elem_field_user_display = document.getElementById("editExpenseForm_month_displayName");
        elem_field_user_display.innerHTML = array_of_months[newValue-1];
    }

/*CATEGORY*/

    // This function doubles up, for loading the initial value, and for adjusting the value after user has selected list item
    function edit_expense_form_load_category(obj){
        console.log("hee " , obj)
        const field_elem = document.getElementById("editExpenseForm_category");
        field_elem.value = obj.Id;

        const field_elem_user_display = document.getElementById("editExpenseForm_category_selected");
        field_elem_user_display.hidden = false;
        field_elem_user_display.innerHTML = obj.Name;

        const field_elem_list = document.getElementById("editExpenseForm_category_dropdown_list");
        field_elem_list.hidden = true;
    }

    // This hides the category selected, and displays a list
    function edit_expense_form_load_category_list(){
        const field_elem_user_display = document.getElementById("editExpenseForm_category_selected");
        // retrieve current boolean value
        const flag = field_elem_user_display.hidden;
        //set field to opposite boolean
        field_elem_user_display.hidden = !flag;

        const field_elem_list = document.getElementById("editExpenseForm_category_dropdown_list");
        //set field to what the other field was previously
        field_elem_list.hidden = flag;

        // readjust the size of the modal
        alterPosition("EditExpense");

    }
</script>
